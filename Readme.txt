для запуску:
Повинен бути встановлений node
Повинен бути встановлений та налаштований postgreSQL
Повинна бути створена порожня база даних. Щоб було швидше - використайте pgAdmin
Параметри підключення до бази даних - пропишіть в .development.env в корені проекту

в консолі в корені проекту робимо:

npm install 
npm run migrate
npm run seed
npm start

Cервер буде запущено домашня сторінка http://127.0.0.1:3000/

СПОДІВАЮСЬ, ЩО ЯК ПІДКАЗКА ТИПУ А ЯК МОЖНА ЗРОБИТИ - воно вам допоможе. 

СТРУКТУРА:
    -- /
        + index.js - точка входу
        + .development.env - змінні оточення. Сюди прописувати параметри postgreeSQL
        + index.js - точка входу в код сервера
        + controllers - роутери 
            + productController.js - для списку продуктів, що знаходяться на домашній сторінці
            + commentController.js - БЕЗПОСЕРЕДНЬ ВАШ БЕКЕНД
        + public - клієнтські сторінки та скрипти
            + home - список продуктів. Кожен клікабельний. Відображується за адресою http://127.0.0.1:3000/
                + index.html - порсто розмітка
                + loader.js - магія. Просто загрузка списку продуктів з сервера, і прив'язка повідомлень до картки кожного продукту. 
                    Ви по ньому клікаєте - відкривається сторінка з вашою формою 10-ом коментів, якщо вони вже є і все.
 
            + product - Картка самого продукту. З формою для коменту. Списку коментів ВАШ ФРОНТЕНД Відображується за адресою http://127.0.0.1:3000/product/:id, де id - натуральне число.
                + index.html
                + loader.js - магія. Вигрузка форми на сервер. Отримання коментів 10... ВСЕ ТЕ, ЩО У ВАС ПО ЗАВДАННЮ

        + db - все, що відноситься до бази даних. До речі, підтримується багато SQL-баз даних. Щоб переключитися на якусь іншу - просто треба змінити 'dialect' в config/database.js та прописати параметри підключення до БД в .development.env
            + models - моделі
                + product - продукт (назва, ціна)
                + comment - сам комент (name, email, description, rating, ...)
            + migration - це фішка для створення таблиць. використовується командою: npm run migrate
            + seeders - це фішка, щоб забити БД різним хламом. Я зробив список продуктів з сайту "Cільпо".

ЗАУВАЖЕННЯ:
    Взагалі-то - так не робиться. Проте, я вас вже й так загрзив інфою на опрацювання, що таке ORM, що таке bootstrap, 
    як відправляти json з форми, що таке змінні оточення і для чого вони треба...

    ТОБТО... якщо я сюди втулю і редер-движки, у вас - голова вибухне. Тим більше, що html - ви не знаєте, а рендер-движки 
    використовують html-подібний своєрідний синтакс. Він і не важкий, але потрібно хоч трохи розбиратися у верстці.

    Помилки користувацького вводу... 
    Є така річ, як робота над помилками користувацького вводу. Воно потребує часу, тому я просто писав всі помилки в консоль 
    на сервері і в консоль на клієнті. Тобто... користувач не побаче 404-ту, 500-ту, 400-ту... помилку, йому здаватиметься, що
    сайт тупо завис. Із-за браку часу - я не обробляв нормально помилки. 
